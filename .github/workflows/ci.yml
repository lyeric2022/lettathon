name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npx tsc --noEmit
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build all workspaces
      run: npm run build
      
    - name: Package Electron app
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd client
        npm run package:linux
        
    - name: Package Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd client
        npm run package:win
        
    - name: Package Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd client
        npm run package:mac
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: catfish-${{ matrix.os }}
        path: client/release/
        retention-days: 7